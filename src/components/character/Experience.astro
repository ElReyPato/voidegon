---
import { bundlerModuleNameResolver } from 'typescript';

interface Props {
  race: string;
  rol: string;
  exp: number;
  start?: number;
}

const { race, rol, exp, start = 2 } = Astro.props;

let porcentaje = 0;
let level = 0;
let expUp = 0;

const expThresholds = [
  0, 300, 900, 2700, 6500, 14000, 23000, 34000, 48000, 64000, 85000, 100000,
  120000, 140000, 165000, 195000, 225000, 265000, 305000, 355000,
];

function medirXP(exp: number) {
  while (exp >= expThresholds[level]) {
    level++;
  }

  expUp = expThresholds[level] - expThresholds[level - 1];

  return { level, expUp };
}

function calcularPorcentaje(exp: number) {
  if (exp === expThresholds[level - 1]) {
    porcentaje = 0;
  } else {
    porcentaje = Math.floor(
      ((exp - expThresholds[level - 1]) / (expUp - expThresholds[level - 1])) *
        100
    );
  }

  return porcentaje;
}

medirXP(exp);
calcularPorcentaje(exp);
console.log(porcentaje);
---

<article class='grid grid-cols-6 items-center gap-2 bg-[--gray] rounded-lg p-2'>
  <a href={`/extras/race/${race.toLowerCase()}`}>
    <section class={`col-span-1 row-start-1`} id='race'>
      <h6 class='text-[--title] font-[unbounded]'>{race}</h6>
    </section>
  </a>

  <section
    class={`col-span-4 font-["caveat_brush"] text-[--white] row-start-1 flex items-center justify-around w-full text-nowrap`}
    style={`grid-column-start: ${start};`}
    id='exp'
  >
    <span class='text-base'>
      Nivel <span class='text-[--light] text-lg'>{level}</span>
    </span>
    <div class='w-[80%] bg-[--gray] rounded-full h-1.5'>
      <div
        class='h-1.5 rounded-full'
        style={`width: ${porcentaje}%`}
        id='pulse'
      >
      </div>
    </div>
    <span class='text-base'>
      <span class='text-[--electro]'>{exp}</span>
      /
      <span class='text-xs'>{expThresholds[level]}</span>
    </span>
  </section>

  <a href={`/extras/rol/${rol.toLowerCase()}`}>
    <section class={`col-span-1 md:row-start-1 row-start-2`} id='rol'>
      <h6 class='text-[--subtitle] font-[unbounded]'>{rol}</h6>
    </section>
  </a>
</article>

<style>
  section {
    padding: 0.5rem;
    line-height: 200%;
  }
  a,
  section {
    background-color: var(--dark);
    border-radius: 0.5rem;

    text-align: center;

    transition: all 100ms ease;
    cursor: default;

    height: 100%;
  }
  a > section {
    cursor: pointer;
  }
  a:hover > section {
    scale: 1.01;
    background-color: var(--black);
  }

  h6 {
    font-weight: bold;
  }

  #exp > * {
    margin: 0 1rem;
  }

  /** MEDIA QUERYS */
  @media (max-width: 1024px) {
    article {
      display: flex;
      flex-direction: column;
    }
    #race {
      grid-row-start: 1;
    }
    #rol {
      grid-row-start: 2;
    }
    #exp {
      order: 1;
    }
    a {
      width: 100%;
    }
  }

  /** Animations */
  @keyframes cambioDeColor {
    0% {
      opacity: 0.25;
    }
    50% {
      opacity: 0.75;
    }
    100% {
      opacity: 0.25;
    }
  }

  @keyframes cargarExp {
    from {
      width: 0;
    }
  }

  #pulse {
    background: linear-gradient(90deg, var(--date) 95%, var(--gray) 100%);
    animation:
      cargarExp 3s forwards ease-in-out,
      cambioDeColor 5s ease infinite;
  }
</style>
