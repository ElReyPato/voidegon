---
interface Props {
  objects?: {
    name: string;
    quantity: number;
    rarity: string;
    description: string;
    img?: string;
  }[];
}

const { objects = [] } = Astro.props;

function getColorByRarity(rarity: string): string {
  switch (rarity.toLowerCase()) {
    case 'common':
      return 'common';
    case 'rare':
      return 'rare';
    case 'epic':
      return 'epic';
    case 'legendary':
      return 'legendary';
    case 'mithic':
      return 'mithic';
    default:
      return 'common';
  }
}
---

<article
  class={`
    bg-[--gray] rounded-lg p-2
    grid gap-2
    w-full h-full
  `}
>
  {objects.map((item) => (
    <section class={`
      bg-[--dark] rounded-lg p-2
      flex items-center gap-2
      w-full
    `}>
      {item.img && <img class='size-14 object-contain' src={item.img} alt={item.name} />}
      <div class='text-start p-2 border-l-2' style={`border-color: var(--${getColorByRarity(item.rarity)})`}>
        <h2 class='font-bold'>{item.name} (x{item.quantity})</h2>
        <p class='text-[--grey] text-sm'>{item.description}</p>
      </div>
    </section>
  ))}
</article>

<style>
  article {
    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
  }
</style>
